<?php

namespace app\models;

use Yii;
use yii\db\ActiveRecord;

/**
 * This is the model class for table "tax_data".
 *
 * @property int $id
 * @property string $nameRu
 * @property string $nameKk
 * @property string $iinBin
 * @property double $totalArrear
 * @property double $totalTaxArrear
 * @property int $pensionContributionArrear
 * @property int $socialContributionArrear
 * @property int $appealledAmount
 * @property int $modifiedTermsAmount
 * @property int $rehabilitaionProcedureAmount
 * @property string $sendTime
 */

class TaxData extends \yii\db\ActiveRecord
{
    private $nameRu;
    private $nameKk;
    private $iinBin;
    private $totalArrear;
    private $totalTaxArrear;
    private $pensionContributionArrear;
    private $socialContributionArrear;
    private $appealledAmount;
    private $modifiedTermsAmount;
    private $rehabilitaionProcedureAmount;
    private $sendTime;
    /** @var array */
    public $taxOrgInfo;



    public function rules()
    {
        return [
            [
                [
                    'nameRu',
                    'nameKk',
                    'iinBin',
                    'totalArrear',
                    'totalTaxArrear',
                    'pensionContributionArrear',
                    'socialContributionArrear',
                    'appealledAmount',
                    'modifiedTermsAmount',
                    'rehabilitaionProcedureAmount',
                    'sendTime',
                    'taxOrgInfo'
                ],
                'safe',
            ]
        ];
    }

    public function save($runValidation = true, $attributeNames = null)
    {
        parent::save($runValidation, $attributeNames); // TODO: Change the autogenerated stub

        $id = parent::find()->where(['iinBin' => self::getAttribute('iinBin')])->orderBy('id DESC')->one();



        foreach ($this->taxOrgInfo as $key => $value)
        {
            if ($value != null)
            {
                $taxOrgInfo = new TaxOrgInfo();
                $taxOrgInfo->taxDataId = $id->getAttribute('id');
                $taxOrgInfo->load($value,'');
                $taxOrgInfo->save();
            }
        }

        return true;
    }

    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'nameRu' => 'Наименование налогоплательщика:',
            'nameKk' => 'Наименование налогоплательщика:',
            'iinBin' => 'ИИН налогоплательщика:',
            'totalArrear' => 'Всего задолженности (тенге):',
            'totalTaxArrear' => 'Итого задолженности в бюджет:',
            'pensionContributionArrear' => 'Задолженность по обязательным пенсионным взносам, обязательным профессиональным пенсионным взносам:',
            'socialContributionArrear' => 'Задолженность по отчислениям и (или) взносам на обязательное социальное медицинское страхование:',
            'appealledAmount' => 'Апелляционная сумма',
            'modifiedTermsAmount' => 'Сумма измененния условиями',
            'rehabilitaionProcedureAmount' => 'Сумма процедур реабилитации',
            'sendTime' => 'Время отправки',
        ];
    }

}
